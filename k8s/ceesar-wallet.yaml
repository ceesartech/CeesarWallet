# Kubernetes namespace
apiVersion: v1
kind: Namespace
metadata:
  name: ceesar-wallet
  labels:
    name: ceesar-wallet
---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: ceesar-wallet-config
  namespace: ceesar-wallet
data:
  APP_ENV: "production"
  LOG_LEVEL: "INFO"
  AWS_REGION: "us-east-1"
---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: ceesar-wallet-secrets
  namespace: ceesar-wallet
type: Opaque
data:
  # Base64 encoded values
  DATABASE_URL: "bXlzcWw6Ly91c2VyOnBhc3N3b3JkQGxvY2FsaG9zdDozMzA2L2NlZXNhci13YWxsZXQ="
  JWT_SECRET: "c3VwZXItc2VjcmV0LWp3dC1rZXk="
  BROKER_API_KEY: "YnJva2VyLWFwaS1rZXk="
---
# Backend deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ceesar-wallet-backend
  namespace: ceesar-wallet
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ceesar-wallet-backend
  template:
    metadata:
      labels:
        app: ceesar-wallet-backend
    spec:
      containers:
      - name: backend
        image: ceesar-wallet/backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: ceesar-wallet-config
              key: AWS_REGION
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ceesar-wallet-secrets
              key: DATABASE_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ceesar-wallet-secrets
              key: JWT_SECRET
        - name: BROKER_API_KEY
          valueFrom:
            secretKeyRef:
              name: ceesar-wallet-secrets
              key: BROKER_API_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
# ML Algorithm deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ceesar-wallet-ml
  namespace: ceesar-wallet
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ceesar-wallet-ml
  template:
    metadata:
      labels:
        app: ceesar-wallet-ml
    spec:
      containers:
      - name: ml-algorithm
        image: ceesar-wallet/ml-algorithm:latest
        ports:
        - containerPort: 8000
        env:
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: ceesar-wallet-config
              key: AWS_REGION
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
---
# Frontend deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ceesar-wallet-frontend
  namespace: ceesar-wallet
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ceesar-wallet-frontend
  template:
    metadata:
      labels:
        app: ceesar-wallet-frontend
    spec:
      containers:
      - name: frontend
        image: ceesar-wallet/frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: REACT_APP_API_URL
          value: "https://api.ceesar-wallet.com"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
# Backend service
apiVersion: v1
kind: Service
metadata:
  name: ceesar-wallet-backend-service
  namespace: ceesar-wallet
spec:
  selector:
    app: ceesar-wallet-backend
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
# ML Algorithm service
apiVersion: v1
kind: Service
metadata:
  name: ceesar-wallet-ml-service
  namespace: ceesar-wallet
spec:
  selector:
    app: ceesar-wallet-ml
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
# Frontend service
apiVersion: v1
kind: Service
metadata:
  name: ceesar-wallet-frontend-service
  namespace: ceesar-wallet
spec:
  selector:
    app: ceesar-wallet-frontend
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ceesar-wallet-ingress
  namespace: ceesar-wallet
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.ceesar-wallet.com
    - app.ceesar-wallet.com
    secretName: ceesar-wallet-tls
  rules:
  - host: api.ceesar-wallet.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ceesar-wallet-backend-service
            port:
              number: 80
  - host: app.ceesar-wallet.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ceesar-wallet-frontend-service
            port:
              number: 80
---
# Horizontal Pod Autoscaler for backend
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ceesar-wallet-backend-hpa
  namespace: ceesar-wallet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ceesar-wallet-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Horizontal Pod Autoscaler for ML algorithm
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ceesar-wallet-ml-hpa
  namespace: ceesar-wallet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ceesar-wallet-ml
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Pod Disruption Budget for backend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ceesar-wallet-backend-pdb
  namespace: ceesar-wallet
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ceesar-wallet-backend
---
# Pod Disruption Budget for ML algorithm
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ceesar-wallet-ml-pdb
  namespace: ceesar-wallet
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ceesar-wallet-ml
